<?php

/**
 * @file
 * Primary module hooks for foia_quarterly_data_report module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Markup;
use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\Core\Entity\EntityForm;
use Drupal\Core\Render\Element;

/**
 * Implements hook_form_form_id_alter().
 */
function foia_quarterly_data_report_form_node_quarterly_foia_report_data_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  foia_quarterly_data_report_disable_agency_overall($form, $form_state);
  foia_quarterly_data_report_set_default_report_values($form, $form_state);
  // Add general validation including checkig for existing report.
  $form['#validate'][] = 'foia_quarterly_data_report_form_quarterly_data_report_validate';
}

/**
 * Implements hook_form_form_id_alter().
 */
function foia_quarterly_data_report_form_node_quarterly_foia_report_data_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  foia_quarterly_data_report_disable_agency_overall($form, $form_state);
  foia_quarterly_data_report_set_default_report_values($form, $form_state);

  $node = $form_state->getFormObject()->getEntity();
  if ($node->isNew()) {
    // For new annual reports, we require that the agency
    // be set before continuing.
    $starting_fields = [
      'field_agency',
      'field_agency_components',
      'field_quarterly_quarter',
      'field_quarterly_year',
    ];
    $hide_elements = [
      'moderation_state',
    ];
    foreach (Element::children($form) as $key) {
      if (str_starts_with($key, 'field_')) {
        if (!in_array($key, $starting_fields)) {
          $form[$key]['#access'] = FALSE;
        }
      } else {
        if (in_array($key, $hide_elements)) {
          $form[$key]['#access'] = FALSE;
        }
      }
    }
    $form['actions']['submit']['#submit'][] = 'foia_quarterly_data_report_save_and_continue';
    $form['actions']['submit']['#value'] = 'Save and continue';
    $form['actions']['preview']['#access'] = FALSE;
    $form['#attached']['library'][] = 'foia_quarterly_data_report/foia_form_display_new_reports';
  }
  // Add general validation including checkig for existing report.
  $form['#validate'][] = 'foia_quarterly_data_report_form_quarterly_data_report_validate';
}

/**
 * Submit handler for brand new quarterly reports.
 *
 * Redirects to the node edit page for continued editing.
 *
 * @param array $form
 *   Drupal form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   Drupal form state.
 */
function foia_quarterly_data_report_save_and_continue(array $form, FormStateInterface $form_state) {
  $current_route_name = \Drupal::routeMatch()->getRouteName();
  $destination_route_name = 'entity.node.edit_form';
  $nid = $form_state->getFormObject()->getEntity()->id();
  $form_state->setRedirect($destination_route_name, ['node' => $nid]);
}

/**
 * Set the FOIA quarterly report year field's default values.
 *
 * Works for both the year and quarter fields.
 *
 * This allows the auto_entitylabel module to rely on the field_quarterly_year
 * and field_quarterly_quarter when setting the title.
 *
 * @param array $form
 *   The quarterly_foia_report_data node add or edit form array.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   Form state passed from hook_form_form_id_alter().
 */
function foia_quarterly_data_report_set_default_report_values(array &$form, FormStateInterface $form_state) {

  // We only do the following for new nodes.
  $node = $form_state->getFormObject()->getEntity();
  if (!$node->isNew()) {
    return;
  }

  $current_year = intval(date('Y'));
  $current_month = intval(date('n'));

  // Fiscal year.
  if ($current_month >= 10) {
    $current_year += 1;
  }

  // Decide on quarter.
  $current_quarter = 1;
  if ($current_month <= 3) {
    $current_quarter = 2;
  } elseif ($current_month <= 6) {
    $current_quarter = 3;
  } elseif ($current_month <= 9) {
    $current_quarter = 4;
  }

  $default_year_value = $form['field_quarterly_year']['widget'][0]['value']['#default_value'] ?? FALSE;
  $default_quarter_value = $form['field_quarterly_quarter']['widget'][0]['value']['#default_value'] ?? FALSE;

  if (!$default_year_value) {
    $form['field_quarterly_year']['widget'][0]['value']['#default_value'] = $current_year;
  }

  if (!$default_quarter_value) {
    $form['field_quarterly_quarter']['widget']['#default_value'] = $current_quarter;
  }
}

/**
 * Validation for the quarterly report.
 *
 * Makes sure there is not already a report for this agency, year, and quarter.
 *
 * @param array $form
 *   Drupal form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   Drupal form state.
 */
function foia_quarterly_data_report_form_quarterly_data_report_validate(array &$form, FormStateInterface $form_state): void {

  $form_state_values = $form_state->getValues();

  // Get the agency node id from the form state.
  $agency_id = 0;
  if (!empty($form_state_values['field_agency'][0]['target_id'])) {
    $agency_id = $form_state_values['field_agency'][0]['target_id'];
  }

  // Get the report year from the form state.
  $report_year = 0;
  if (!empty($form_state_values['field_quarterly_year'][0]['value'])) {
    $report_year = $form_state_values['field_quarterly_year'][0]['value'];
  }

  // Get the report quarter from the format state.
  $report_quarter = 0;
  if (!empty($form_state_values['field_quarterly_quarter'][0]['value'])) {
    $report_quarter = $form_state_values['field_quarterly_quarter'][0]['value'];
  }

  // Check for an existing report.
  if ($form_state->getFormObject() instanceof EntityForm) {
    $current_nid = $form_state->getformObject()->getEntity()->id();
  } else {
    $current_nid = 0;
  }
  if ($current_nid == NULL) {
    $current_nid = 0;
  }

  // With the agency id and report year, query the nodes to find one that
  // has the same agency id and year.  If found through and error allowing
  // the user to update the existing report or change the values.
  if ($agency_id && $report_year && $report_quarter) {
    $query = \Drupal::entityQuery('node')
      ->condition('type', 'quarterly_foia_report_data')
      ->condition('field_agency', $agency_id)
      ->condition('field_quarterly_year', $report_year)
      ->condition('field_quarterly_quarter', $report_quarter)
      ->condition('nid', $current_nid, '!=')
      ->sort('created', 'DESC')
      ->range(0, 1);
    $results = $query->execute();
    // If there is a duplicate found throw error with link to existing report.
    if (count($results)) {
      $nid = array_pop($results);
      $message = '<a href="/node/' . $nid . '/edit">Click here to edit the existing report</a> or change the values below.';
      $rendered_message = Markup::create($message);
      $error_message = new TranslatableMarkup('@message', ['@message' => $rendered_message]);
      $form_state->setErrorByName('field_agency', 'There is already a report for the agency and year/quarter you specified.');
      $form_state->setErrorByName('field_quarterly_year', $error_message);
    }
  }

  // Additional validation to avoid incomplete reports from being submitted.
  $enforce_during_states = ['submitted_to_oip', 'published'];
  if (in_array($form_state_values['moderation_state'][0]['value'], $enforce_during_states)) {
    if (!is_numeric($form_state_values['field_quarterly_closed'][0]['value'])) {
      $form_state->setErrorByName('field_quarterly_closed', 'Please provide a value for "Ten Oldest Requests Closed".');
    }
    if (!is_numeric($form_state_values['field_quarterly_pending'][0]['value'])) {
      $form_state->setErrorByName('field_quarterly_pending', 'Please provide a value for "Ten Oldest Pending Requests".');
    }
    $no_component_data = TRUE;
    foreach ($form_state_values['field_quarterly_component_data'] as $key => $value) {
      if (is_numeric($key)) {
        $no_component_data = FALSE;
        if (!isset($form_state_values['field_quarterly_component_data'][$key]['subform'])) {
          continue;
        }
        $subform = $form_state_values['field_quarterly_component_data'][$key]['subform'];
        $prefix = "field_quarterly_component_data][$key][subform][";
        if (empty($subform['field_agency_component'][0]['target_id'])) {
          $form_state->setErrorByName("${prefix}field_agency_component", 'Please provide the agency.');
        }
        if (!is_numeric($subform['field_quarterly_backlogged'][0]['value'])) {
          $form_state->setErrorByName("${prefix}field_quarterly_backlogged", 'Please provide a value for "Number of requests backlogged".');
        }
        if (!is_numeric($subform['field_quarterly_processed'][0]['value'])) {
          $form_state->setErrorByName("${prefix}field_quarterly_processed", 'Please provide a value for "Number of requests processed".');
        }
        if (!is_numeric($subform['field_quarterly_received'][0]['value'])) {
          $form_state->setErrorByName("${prefix}field_quarterly_received", 'Please provide a value for "Number of requests received".');
        }
      }
    }

    if ($no_component_data) {
      $form_state->setErrorByName('field_quarterly_component_data', 'The report is missing "Component data". Please enter component data before submitting your report.');
    }
  }
}

/**
 * Disable some readonly fields for the quarterly report.
 *
 * @param array $form
 *   Drupal form.
 */
function foia_quarterly_data_report_disable_agency_overall(array &$form) {

  $fieldsToDisable = [
    'quarterly_backlogged_oa',
    'quarterly_processed_oa',
    'quarterly_received_oa',
  ];

  foreach ($fieldsToDisable as $fieldName) {
    $fullFieldName = 'field_' . $fieldName;
    $form[$fullFieldName]['widget'][0]['value']['#attributes']['readonly'] = TRUE;
  }
}
